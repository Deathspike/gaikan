{
  "name": "gaikan",
  "version": "1.1.0",
  "description": "HTML template engine for Node and Express.",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/Deathspike/gaikan.git"
  },
  "keywords": [
    "express",
    "gaikan",
    "template",
    "engine"
  ],
  "author": {
    "name": "Roel van Uden"
  },
  "license": "MIT",
  "readme": "# Gaikan\r\n\r\nHTML template engine for Node and Express.\r\n\r\n## Installation\r\n\r\n\t$ npm install gaikan\r\n\r\n## Features\r\n\r\n\t* Compiles templates to JavaScript supporting node and browsers.\r\n\t* Complies with W3C standards.\r\n\t* Complies with the [Express](http://expressjs.com) view system.\r\n\t* Friendly for non-programmers.\r\n\t* Includes/partials.\r\n\t* Iterators/conditions.\r\n\t* Variables.\r\n\t\r\n## Planned Features\r\n\r\n\t* Express module to default to browser-rendering when available.\r\n\t* Iterator expansion through filters (i.e. sorting).\r\n\r\n## API\r\n\r\nThe API is minimal.\r\n\r\n\t* build: Build all templates.\r\n\t* buildToPath(path): Build all templates into a file.\r\n\t* compile(template): Compile a template.\r\n\t* compileFromPath(path): Compile a template from a path.\r\n\t* render(template, values): Render a template.\r\n\t* renderFromPath(path, values): Render a template from a path.\r\n\r\n## Configuration\r\n\r\nSeveral configuration options are available in Gaikan.options.\r\n\r\n\t* cache: Indicates whether compiled templates are cached (Default: true).\r\n\t* directory: The direction from which templates are searched (Default: views).\r\n\t* extension: The default extension of a template (Default: html).\r\n\t\r\n## Express\r\n\r\nGaikan can be plugged into Express quite easily.\r\n\r\n\t// Set the extension for the view engine.\r\n\tapp.set('view engine', 'html');\r\n\t// Register the Gaikan template engine.\r\n\tapp.engine('html', require('Gaikan').__express);\r\n\r\nThe configuration has now changed behaviour.\r\n\t\r\n\t* cache: Ignored. This is now controlled by Express.\r\n\t* directory: Must match the directory specified by Express.\r\n\t* extension: Ignored, except when using build or buildToPath methods.\r\n\r\n## Templates\r\n\r\n### Includes/partials\r\n\r\nA home template is going to be rendered into a master template.\r\n\r\n\t<!-- data-include includes a master template -->\r\n\t<ins data-include=\"master\">\r\n\t\t<!-- This data-partial tells the master template we have a content partial defined -->\r\n\t\t<ins data-partial=\"content\">\r\n\t\t\tHello world!\r\n\t\t</ins>\r\n\t\t<!-- This data-partial tells the master template we have a copy partial defined -->\r\n\t\t<ins data-partial=\"copy\">\r\n\t\t\tRoel van Uden\r\n\t\t</ins>\r\n\t</ins>\r\n\t\r\nSince I am including a master template, I need to make sure it is available.\r\n\r\n\t<html>\r\n\t\t<head>\r\n\t\t\t<title>Hello world!</title>\r\n\t\t</head>\r\n\t\t<body>\r\n\t\t\t<!-- This data-partial can be filled with content that is provided as a partial when including -->\r\n\t\t\t<div id=\"container\" data-partial=\"content\"></div>\r\n\t\t\t<div id=\"copy\">(C) <ins data-partial=\"copy\" /></div>\r\n\t\t</body>\r\n\t</html>\r\n\t\r\nWhen I render the home template, the following is generated.\r\n\r\n\t<html>\r\n\t\t<head>\r\n\t\t\t<title>Hello world!</title>\r\n\t\t</head>\r\n\t\t<body>\r\n\t\t\t<div id=\"container\">\r\n\t\t\t\tHello world!\r\n\t\t\t</div>\r\n\t\t\t<div id=\"copy\">(C) Roel van Uden</div>\r\n\t\t</body>\r\n\t</html>\r\n\r\nThe result is obvious. Please do note that using *ins* ensures that element is omitted.\r\n\r\n### Iterators/conditions\r\n\r\nIterators allow you to repeat content for each item using the data-each attribute.\r\n\r\n\t<!-- This data-each ensures that the users are iterate through -->\r\n\t<ul data-each=\"users\">\r\n\t\t<-- Use a variable to show the name of each user -->\r\n\t\t<li>#{name}</li>\r\n\t</ul>\r\n\r\nThe result is obvious.\r\n\r\n\t<ul>\r\n\t\t<li>Foo</li>\r\n\t\t<li>Bar</li>\r\n\t</ul>\r\n\r\nYou can also use a condition to show content depending on a circumstance.\r\n\r\n\t<ul data-each=\"users\">\r\n\t\t<li data-if=\"name.length > 0\">#{name}</li>\r\n\t</ul>\r\n\r\nSince this is compiled to JavaScript, you can use JavaScript properties.\r\n\r\n### Variables\r\n\r\nVariables are used create dynamic content on the template.\r\n\r\n\tHello #{name}, welcome back!\r\n\t\r\nA variable can appear as non-escaped HTML, which uses an exclamation mark.\r\n\r\n\tHello !{name}, welcome back!\r\n\t\r\nIt is also possible to add a handler to change the variable.\r\n\r\n\tHello #{name|title}, welcome back!\r\n\t\r\nOr you can use multiple handlers to change the variable.\r\n\r\n\tHello <a href=\"/users/#{name|title,url}/\">#{name|title}</a>, welcome back!\r\n\t\r\nThe default handlers are *escape*, *lower*, *title*, *url* and *upper*. ",
  "_id": "gaikan@1.0.0",
  "_from": "gaikan"
}
